<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>苏湘伦的Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://suxianglun.github.i/"/>
  <updated>2017-04-26T07:44:30.000Z</updated>
  <id>http://suxianglun.github.i/</id>
  
  <author>
    <name>苏湘伦</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://suxianglun.github.i/2017/04/26/hello-world/"/>
    <id>http://suxianglun.github.i/2017/04/26/hello-world/</id>
    <published>2017-04-26T07:44:30.000Z</published>
    <updated>2017-04-26T07:44:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>如何利用Hexo、GitHub pages从零开始创建个人博客</title>
    <link href="http://suxianglun.github.i/2017/04/19/howCreateMyBlog/"/>
    <id>http://suxianglun.github.i/2017/04/19/howCreateMyBlog/</id>
    <published>2017-04-19T01:19:42.000Z</published>
    <updated>2017-04-19T05:58:17.000Z</updated>
    
    <content type="html"><![CDATA[<p>从搭建到成功以及本文的诞生，前后花了两天时间，真是一把辛酸泪，感觉还是挺费事的，中途一度想放弃，可还是咬牙坚持下来了，但看到结果后感觉一切的辛苦都是值得的。过程中一定要有耐心，毕竟需要用到的东西挺多的，比如：node.js、git、 github、hexo其中的知识。废话不多说了，详情如下：</p>
<h4 id="一、系统环境配置："><a href="#一、系统环境配置：" class="headerlink" title="一、系统环境配置："></a>一、系统环境配置：</h4><p>要想利用Hexo、GitHub搭建个人博客，首先要安装Node.js、git：    </p>
<h5 id="1、Node-js安装："><a href="#1、Node-js安装：" class="headerlink" title="1、Node.js安装："></a>1、Node.js安装：</h5><p><a href="http://www.runoob.com/nodejs/nodejs-install-setup.html" target="_blank" rel="external">下载Node.js</a>     </p>
<h6 id="或者通过如下命令安装："><a href="#或者通过如下命令安装：" class="headerlink" title="或者通过如下命令安装："></a>或者通过如下命令安装：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">  brew install node  #最新版的node.js的包中已经集成了npm包管理工具 </div><div class="line">```    </div><div class="line">###### 通过如下命令查看是否安装成功： </div><div class="line">   </div><div class="line">```   </div><div class="line">node -v    </div><div class="line">npm -v</div><div class="line">```  </div><div class="line"></div><div class="line">##### 2、Git安装及配置：</div><div class="line">[下载Git](https://git-scm.com/download/)  </div><div class="line">###### 或者通过如下命令安装：  </div><div class="line"></div><div class="line">```   </div><div class="line">brew install git          #Mac电脑使用brew安装    </div><div class="line">sudo apt-get install git  #Ubuntu系统使用这条命令安装</div><div class="line"></div><div class="line">```  </div><div class="line">配置详见另外一篇博客： [git安装与配置](https://git-scm.com/download/)  </div><div class="line"></div><div class="line">##### 3、Hexo安装：</div></pre></td></tr></table></figure>
<p>$ npm install hexo -g  #-g表示全局安装, npm默认为当前项目安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">###### 如遇错误，请使用一下安装：</div></pre></td></tr></table></figure></p>
<p>$ npm install hexo –no-optional<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">###### 验证是否成功安装：</div></pre></td></tr></table></figure></p>
<p>$ hexo -v<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">目前我用到的环境如下 ，出现类似如下环境说明hexo安装成功</div></pre></td></tr></table></figure></p>
<p>hexo-cli: 1.0.2<br>os: Darwin 16.4.0 darwin x64<br>http_parser: 2.7.0<br>node: 6.10.0<br>v8: 5.1.281.93<br>uv: 1.9.1<br>zlib: 1.2.8<br>ares: 1.10.1-DEV<br>icu: 58.2<br>modules: 48<br>openssl: 1.0.2k</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">###### 创建博客的根目录并切换到更目录下：</div></pre></td></tr></table></figure>
<p>$ mkdir myblog<br>$ cd myblog<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">###### 初始化myblog文件夹使其成为Hexo博客：</div></pre></td></tr></table></figure></p>
<p>$ hexo init<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">###### 自动根据当前目录下文件,生成静态网页：</div></pre></td></tr></table></figure></p>
<p>$ hexo generate<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">###### 运行本地服务：</div></pre></td></tr></table></figure></p>
<p>$ hexo server<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">###### 有必要提下Hexo常用的几个命令：</div></pre></td></tr></table></figure></p>
<p>$ hexo new “postName” #新建文章<br>$ hexo new page “pageName” #新建页面<br>$ hexo generate (或者hexo g) 生成静态文件，会在当前目录下生成一个新的叫做public的文件夹<br>$ hexo server (或者hexo s) 启动本地web服务，用于博客的预览<br>$ hexo deploy (或者hexo d) 部署播客到远端（比如github, coding等平台）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">###### 常用简写：</div></pre></td></tr></table></figure>
<p>$ hexo n == hexo new<br>$ hexo g == hexo generate<br>$ hexo s == hexo server<br>$ hexo d == hexo deploy<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">###### 常用组合：</div></pre></td></tr></table></figure></p>
<p>$ hexo d -g #生成部署<br>$ hexo s -g #生成预览<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">通过hexo g生成静态文件和hexo s启动本地web服务后，现在我们打开&lt;http://localhost:4000/&gt; 就可以看到一篇内置的blog了。看到后是不是感觉很有成就感？反正我是这么认为的。</div><div class="line">#### 二、Hexo主题设置</div><div class="line">默认的主题是landscape，这里以主题yilia为例进行说明。[Hexo中文官网：下载主题、配置详解](https://hexo.io/zh-cn/docs/)</div><div class="line">###### 安装主题</div></pre></td></tr></table></figure></p>
<p>$ hexo clean<br>$ git clone <a href="https://github.com/litten/hexo-theme-yilia.git" target="_blank" rel="external">https://github.com/litten/hexo-theme-yilia.git</a> themes/yilia<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">###### 修改主题</div></pre></td></tr></table></figure></p>
<p>修改myblog目录下的_config.yml配置文件中的theme属性，将其设置为yilia。<br>并按照主题说明进行相关的配置，这点很重要，否则修改后的主题样式会有变化<br>例如：git clone <a href="https://github.com/GeekaholicLin/hexo-theme-ylion.git这个主题" target="_blank" rel="external">https://github.com/GeekaholicLin/hexo-theme-ylion.git这个主题</a><br>就需要在_config.yml配置文件添加如下内容：</p>
<h3 id="search插件基于-https-github-com-PaicHyperionDev-hexo-generator-search"><a href="#search插件基于-https-github-com-PaicHyperionDev-hexo-generator-search" class="headerlink" title="search插件基于 https://github.com/PaicHyperionDev/hexo-generator-search"></a>search插件基于 <a href="https://github.com/PaicHyperionDev/hexo-generator-search" target="_blank" rel="external">https://github.com/PaicHyperionDev/hexo-generator-search</a></h3><h3 id="使用说明请参考该repo"><a href="#使用说明请参考该repo" class="headerlink" title="使用说明请参考该repo"></a>使用说明请参考该repo</h3><p>search:<br>  path: search.xml<br>  field: all<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">###### 更新主题</div></pre></td></tr></table></figure></p>
<p>$ hexo g # 生成<br>$ hexo s # 启动本地web服务器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">#### 三、GitHub Pages配置</div><div class="line">###### 1、注册、登录GitHub </div><div class="line">github官网：&lt;https://github.com/&gt;</div><div class="line">![你值得拥有](https://ww4.sinaimg.cn/large/006tKfTcgy1fch0a9kz7aj31kw0z7npd.jpg)</div><div class="line">###### 2、创建项目仓库 </div><div class="line">注册并登陆Github官网成功后，点击页面右上角的+，选择New repository。</div><div class="line">![你值得拥有](http://7xs5l8.com1.z0.glb.clouddn.com/wangzhan20163281.png)</div><div class="line"> </div><div class="line">###### 3、填写项目名</div><div class="line">在Repository name中填写：**Github账号名.github.io 必须这样填，否则会出错 例如我的账号为:allen,那么就必须填allen.github.io**</div><div class="line">![你值得拥有](http://www.pchou.info/assets/img/build-github-blog-page-02-img0.png)</div><div class="line">###### 4、设置GitHub pages</div><div class="line">打开settings，有一个Github Pages 的设置，点击 source 中的本来的 None ，使其变成 master 分支，也就是作为部署github pages 的分支，然后点击 save。</div><div class="line">![你值得拥有](http://images2015.cnblogs.com/blog/903320/201701/903320-20170115212404385-1979000093.png)</div><div class="line">###### 5、查看网址</div><div class="line">页面刷新之后，再看 github pages 设置框处，多了一行网址，就是你的 github pages 的网址了，点击进去就进入属于你自己的博客网址了。</div><div class="line">![你值得拥有](http://images2015.cnblogs.com/blog/903320/201701/903320-20170115213630338-44375750.png)</div><div class="line"></div><div class="line">#### 四、部署到GitHub pages</div><div class="line">###### 1、修改_config.yml</div><div class="line">千万要注意冒号：后边要留有空格    </div><div class="line"></div><div class="line">基本设置</div></pre></td></tr></table></figure></p>
<h1 id="Site"><a href="#Site" class="headerlink" title="Site"></a>Site</h1><p>title: allen #标题<br>subtitle: welcome to allen blog #副标题<br>description:        #描述<br>author: John Doe         #作者<br>language: zh-CN #语言<br>timezone:        #时区</p>
<h1 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h1><h2 id="If-your-site-is-put-in-a-subdirectory-set-url-as-‘http-yoursite-com-child‘-and-root-as-‘-child-‘"><a href="#If-your-site-is-put-in-a-subdirectory-set-url-as-‘http-yoursite-com-child‘-and-root-as-‘-child-‘" class="headerlink" title="If your site is put in a subdirectory, set url as ‘http://yoursite.com/child‘ and root as ‘/child/‘"></a>If your site is put in a subdirectory, set url as ‘<a href="http://yoursite.com/child" target="_blank" rel="external">http://yoursite.com/child</a>‘ and root as ‘/child/‘</h2><p>url: <a href="http://suxianglun.github.io" target="_blank" rel="external">http://suxianglun.github.io</a>  #用于绑定域名, 其他的不需要配置，即为GitHub pages生成的那个网址<br>root: /<br>permalink: :year/:month/:day/:title/<br>permalink_defaults:</p>
<h1 id="Extensions"><a href="#Extensions" class="headerlink" title="Extensions"></a>Extensions</h1><h2 id="Plugins-https-hexo-io-plugins"><a href="#Plugins-https-hexo-io-plugins" class="headerlink" title="Plugins: https://hexo.io/plugins/"></a>Plugins: <a href="https://hexo.io/plugins/" target="_blank" rel="external">https://hexo.io/plugins/</a></h2><h2 id="Themes-https-hexo-io-themes"><a href="#Themes-https-hexo-io-themes" class="headerlink" title="Themes: https://hexo.io/themes/"></a>Themes: <a href="https://hexo.io/themes/" target="_blank" rel="external">https://hexo.io/themes/</a></h2><p>theme: hexo-theme-landfarz   #主题设置</p>
<h1 id="Deployment"><a href="#Deployment" class="headerlink" title="Deployment"></a>Deployment</h1><h2 id="Docs-https-hexo-io-docs-deployment-html"><a href="#Docs-https-hexo-io-docs-deployment-html" class="headerlink" title="Docs: https://hexo.io/docs/deployment.html"></a>Docs: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">https://hexo.io/docs/deployment.html</a></h2><p>deploy:   #部署, 发布在 GitHub 上面<br>  type: git<br>  repo: git@github.com:suxianglun/suxianglun.github.io.git #GitHub 项目仓库<br>  branch: master<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">###### 2、部署到GitHub 上</div></pre></td></tr></table></figure></p>
<p>$ hexo clean #清除<br>$ hexo g #生成<br>$ hexo d #部署 # 可与hexo g合并为 hexo d -g<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo d 之后如果出现ERROR Deployer not found: Git,请键入如下命令</div></pre></td></tr></table></figure></p>
<p>$ npm install hexo-deployer-git –save<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">部署之后去查看GitHub pages那个网址http://suxianglun.github.io，有可能会出现:   </div><div class="line">Your site is having problems building: unable to build page. Please try again later. 或者</div><div class="line">Your page is having problems building: page build failed</div><div class="line">同时也会收到github发来的page build failure的邮件，但是邮件中显示的错误信息和settings页面上的一样, 就这句话, 什么都没有, 没有任何错误提示.我就卡在这一天，后来用了好长时间来解决了。我分析的主要原因如下：    </div><div class="line">1、Hexo未进行构建html,即未执行hexo g,这个过程需要一段时间，构建好html后myblog根目录下完整目录应该如下：</div></pre></td></tr></table></figure></p>
<p>README.md    db.json        package.json    scaffolds    themes<br>_config.yml    node_modules    public        source</p>
<p>```<br>2、Hexo 配置不正确，请严格按照要求进行配置</p>
<p>注意事项：<br>markdown标题标准写法写法需要在”#”和后面字符之间加一个空格<br>如果不加空格 有些引擎就解析不了    </p>
<p>另外说一下我的个人博客地址 <a href="https://suxianglun.github.io/" target="_blank" rel="external">https://suxianglun.github.io/</a> 欢迎来骚扰。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;从搭建到成功以及本文的诞生，前后花了两天时间，真是一把辛酸泪，感觉还是挺费事的，中途一度想放弃，可还是咬牙坚持下来了，但看到结果后感觉一切的辛苦都是值得的。过程中一定要有耐心，毕竟需要用到的东西挺多的，比如：node.js、git、 github、hexo其中的知识。废话不
    
    </summary>
    
    
  </entry>
  
</feed>
